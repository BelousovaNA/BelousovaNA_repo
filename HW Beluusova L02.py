# 1. Создать список и заполнить его элементами различных типов данных. Реализовать скрипт
# проверки типа данных каждого элемента.
# Использовать функцию type() для проверки типа. Элементы списка можно не запрашивать у
# пользователя, а указать явно, в программе.

examples = ["String", 10, 25.78, False, "True", []]

for item in examples:
    print(type(item))

# 2. Для списка реализовать обмен значений соседних элементов, # т.е. Значениями
# обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
# При нечетном количестве элементов последний сохранить на своем месте.
# Для заполнения списка элементов необходимо использовать функцию input().

items = input("Укажите значения списка через запятую >>> ").split(",")

max_idx = len(items) - 1

for idx in range(0, max_idx, 2):
     next_idx = idx + 1
     items[idx], items[next_idx] = items[next_idx], items[idx]

print(items)

# 3. Пользователь вводит месяц в виде целого числа от 1 до 12. # Сообщить к какому времени
# года относится месяц (зима, весна, лето, осень). Напишите решения через list и через dict.

month = int(input("Укажите номер месяца >>> "))

year_dict = {
     "зима": (12, 1, 2),
     "весна": (3, 4, 5),
     "лето": (6, 7, 8),
     "осень": (9, 10, 11),
 }

for season, months in year_dict.items():
     if month in months:
         print(f"Время года = {season}")
         break

# 4. Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово
# с новой строки. Строки необходимо пронумеровать. Если слово длинное, выводить только
# первые 10 букв в слове.

words = input("Введите строку из нескольких слов >>> ").split()

for idx, value in enumerate(words, start=1):
     print(f"{idx}. {value[:10]}")

 # 5. Реализовать структуру "Рейтинг", представляющую собой не возрастающий набор натуральных чисел.
# У пользователя необходимо запрашивать новый элемент рейтинга.
# Если в рейтинге существуют элементы с одинаковыми значениями, то новый элемент
# с тем же значением должен разместиться после них.
#
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].
#
rating = [5, 4, 3, 2, 1]

while True:
     try:
         print(f"Рейтинг = {rating}")
         user_rate = int(input("Введите новый рейтинг >>> "))

         current_rate_count = rating.count(user_rate)

         if current_rate_count:
             last_current_idx = rating.index(user_rate) + current_rate_count
             rating.insert(last_current_idx, user_rate)
         else:
             if user_rate > rating[0]:
                 rating.insert(0, user_rate)
             elif user_rate < rating[-1]:
                 rating.append(user_rate)
             else:
                 for idx, rate in enumerate(rating):
                     if rate < user_rate:
                         rating.insert(idx, user_rate)
                         break

         print(rating)
     except ValueError:
         print("Неверное число")
     except KeyboardInterrupt:
         exit()
